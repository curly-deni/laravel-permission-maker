<?php

use Illuminate\Database\Migrations\Migration;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\PermissionRegistrar;
use Spatie\Permission\Exceptions\PermissionDoesNotExist;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        $permissions = $this->buildPermissions();

        foreach ($permissions as $permission) {
            Permission::findOrCreate($permission);
        }

        app(PermissionRegistrar::class)->forgetCachedPermissions();
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        $permissions = $this->buildPermissions();

        foreach ($permissions as $permissionName) {
            try {
                $permission = Permission::findByName($permissionName);
                $permission?->delete();
            } catch (PermissionDoesNotExist $e) {
                // Permission already deleted or does not exist
            }
        }

        app(PermissionRegistrar::class)->forgetCachedPermissions();
    }

    /**
     * Build the permission list based on resource and options.
     */
    private function buildPermissions(): array
    {
        if ({{create}}) {
            $permissions[] = '{{resource}}:create';
        }

        if ({{update}}) {
            $permissions[] = '{{resource}}:update';
        }

        if ({{delete}}) {
            $permissions[] = '{{resource}}:delete';
        }

        if ({{read}}) {
            $permissions[] = '{{resource}}:read';
        }

        if ({{private}}) {
            $permissions[] = '{{resource}}:private_read';
        }

        if ({{own}}) {
            array_unshift($permissions,
                '{{resource}}:own_read',
                '{{resource}}:own_update',
                '{{resource}}:own_delete'
            );
        }

        return $permissions;
    }
};
